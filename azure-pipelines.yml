# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

# azure-pipeline.yml

trigger:
  - master  # Define which branch triggers the pipeline

pool:
  vmImage: 'ubuntu-latest'  # Specify the VM image for the pipeline agent

steps:
- task: Docker@2
  inputs:
    containerRegistry: 'your-container-registry-service-connection'  # Specify your Azure Container Registry service connection
    repository: 'your-acr-name.azurecr.io/mysql'  # Path to your MySQL Dockerfile
    command: 'build'

- task: Docker@2
  inputs:
    containerRegistry: 'your-container-registry-service-connection'
    repository: 'your-acr-name.azurecr.io/test1'
    command: 'build'
    Dockerfile: '$(Build.SourcesDirectory)/test1/Dockerfile'  # Path to your frontend Dockerfile

- task: Docker@2
  inputs:
    containerRegistry: 'your-container-registry-service-connection'
    repository: 'your-acr-name.azurecr.io/fast_api'
    command: 'build'
    Dockerfile: '$(Build.SourcesDirectory)/fast_api/Dockerfile'  # Path to your FastAPI Dockerfile

- task: Docker@2
  inputs:
    containerRegistry: 'your-container-registry-service-connection'
    repository: 'your-acr-name.azurecr.io/mysql'
    command: 'push'

- task: Docker@2
  inputs:
    containerRegistry: 'your-container-registry-service-connection'
    repository: 'your-acr-name.azurecr.io/test1'
    command: 'push'

- task: Docker@2
  inputs:
    containerRegistry: 'your-container-registry-service-connection'
    repository: 'your-acr-name.azurecr.io/fast_api'
    command: 'push'

- task: AzureWebAppContainer@1
  inputs:
    azureSubscription: 'your-azure-service-connection'
    appName: 'your-web-app-name'
    containers: 'your-acr-name.azurecr.io/mysql'
    multiContainerConfigFile: 'azure-vote/azuredeploy.json'  # Path to your multi-container configuration file
